// Typescript and Shared rules
export const sharedRules = {
    'accessor-pairs': [ 'warn', { enforceForClassMembers: true, },],
    'array-bracket-newline': [
        'warn',
        {
            minItems: 3,
            multiline: true,
        },
    ],
    'array-bracket-spacing': [
        'warn',
        'always',
        {
            arraysInArrays: true,
            objectsInArrays: false,
            singleValue: true,
        },
    ],
    'array-callback-return': [ 'warn', { allowImplicit: true, },],
    'array-element-newline': [
        'warn',
        {
            minItems: 3,
            multiline: true,
        },
    ],
    'arrow-parens': [ 'warn', 'as-needed' ],
    'arrow-spacing': [
        1,
        {
            after: true,
            before: true,
        },
    ],
    'block-scoped-var': 'warn',
    'block-spacing': [ 'warn', 'always' ],
    'brace-style': [
        'warn',
        '1tbs',
        { allowSingleLine: true, },
    ],
    camelcase: [ 'off', { ignoreDestructuring: true, },],
    'capitalized-comments': [
        'off',
        'always',
        {
            ignoreConsecutiveComments: true,
            ignoreInlineComments: true,
            ignorePattern: /pragma|ignore|prettier-ignore|webpack\w+:|c8/.source,
        },
    ],
    'comma-dangle': 'off',
    'comma-spacing': [
        'warn',
        {
            after: true,
            before: false,
        },
    ],
    'comma-style': [
        'warn',
        'first',
        {
            exceptions: {
                ArrayExpression: true,
                ObjectExpression: true,
            },
        },
    ],
    'compat/compat': 'warn',
    complexity: [ 'off', 45 ],
    'computed-property-spacing': [ 'warn', 'always' ],
    'constructor-super': 'warn',
    curly: [ 'warn', 'multi-or-nest' ],
    'default-case': 'warn',
    'default-param-last': 'warn',
    'depend/ban-dependencies': 'off', // FIXME: Da riattivare poi quando avremo voglia di sostituire un pò le dipendenze "scomode"
    'dot-location': [ 'warn', 'property' ],
    'dot-notation': 'warn',
    'eol-last': 'warn',
    eqeqeq: [ 'warn', 'always' ],
    'eslint-comments/disable-enable-pair': [ 'warn', { allowWholeFile: true, },],
    'eslint-comments/no-aggregating-enable': 'warn',
    'eslint-comments/no-duplicate-disable': 'warn',
    'eslint-comments/no-unused-disable': 'warn',
    'for-direction': 'warn',
    'func-call-spacing': [ 'warn', 'never' ],
    'func-name-matching': [ 'warn', { considerPropertyDescriptor: true, },],
    'func-names': [ 'warn', 'never' ],
    'function-call-argument-newline': [ 'warn', 'consistent' ],
    'function-paren-newline': [ 'warn', 'multiline-arguments' ],
    'generator-star-spacing': [ 'warn', 'both' ],
    'getter-return': 'warn',
    'grouped-accessor-pairs': [ 'warn', 'getBeforeSet' ],
    'guard-for-in': 'warn',
    'import-newlines/enforce': [ 'warn', { forceSingleLine: false, }],
    'import-x/default': 'warn', // FIXME: Disabilitata perché rallenta EsLint
    'import-x/export': 'warn', // FIXME: Disabilitata perché rallenta EsLint
    'import-x/extensions': [
        'warn',
        {
            ignorePackages: true,
            pattern: {
                css: 'always',
                gql: 'always',
                js: 'never',
                json: 'always',
                jsx: 'never',
                md: 'always',
                module: 'always',
                svg: 'always',
                vue: 'always',
            },
        },
    ], // FIXME: Disabilitata perché rallenta EsLint
    'import-x/first': 'warn',
    'import-x/namespace': [ 'warn', { allowComputed: true, },], // FIXME: Disabilitata perché rallenta EsLint
    'import-x/no-absolute-path': 'warn',
    'import-x/no-anonymous-default-export': 'off',
    'import-x/no-duplicates': 'warn',
    // FIXME: Disabilitata perché rallenta EsLint
    'import-x/no-extraneous-dependencies': 'off',
    'import-x/no-mutable-exports': 'warn',
    'import-x/no-named-as-default': 'warn',
    // FIXME: Disabilitata perché rallenta EsLint
    'import-x/no-named-as-default-member': 'warn',
    // FIXME: Disabilitata perché rallenta EsLint
    'import-x/no-named-default': 'warn',
    'import-x/no-self-import': 'warn',
    // FIXME: Disabilitata perché rallenta EsLint
    'import-x/no-unassigned-import': [
        'warn',
        {
            allow: [
                '**/register',
                '**/register/**',
                '**/*.css',
                '**/*.scss',
                '**/*.sass',
                '**/*.postcss',
                '**/*.less',
                '**/css',
                '**/scss',
            ],
        },
    ],
    'import-x/no-useless-path-segments': [ 'warn', { noUselessIndex: true, },],
    'import-x/no-webpack-loader-syntax': 'warn',
    indent: [
        'warn',
        4,
        { SwitchCase: 1, },
    ],
    'jsdoc/check-access': 'warn', // FIXME: Disabilitata perché rallenta EsLint
    'jsdoc/check-alignment': 'warn', // FIXME: Disabilitata perché rallenta EsLint
    'jsx-quotes': 'warn',
    'key-spacing': [ 'warn', { beforeColon: false, },],
    'keyword-spacing': [
        'warn',
        {
            after: false,
            overrides: {
                case: { after: true, },
                catch: {
                    after: false,
                    before: true,
                },
                const: { after: true, },
                default: { after: true, },
                else: {
                    after: true,
                    before: true,
                },
                export: { after: true, },
                finally: { after: true, },
                from: {
                    after: true,
                    before: true,
                },
                import: { after: true, },
                return: { after: true, },
                try: { after: true, },
            },
        },
    ],
    'lines-around-comment': [
        'warn',
        {
            afterBlockComment: false,
            afterLineComment: false,
            allowArrayEnd: true,
            allowArrayStart: true,
            allowBlockEnd: true,
            allowBlockStart: true,
            allowObjectEnd: true,
            allowObjectStart: true,
            beforeBlockComment: false,
            beforeLineComment: false,
        },
    ],
    'lines-between-class-members': [
        'warn',
        'always',
        { exceptAfterSingleLine: true, },
    ],
    'max-depth': [ 'warn', { max: 7, },],
    'max-len': [
        'off',
        1200,
        4,
        {
            ignoreStrings: true,
            ignoreTemplateLiterals: true,
            ignoreUrls: true,
        },
    ],
    'max-nested-callbacks': [ 'warn', 7 ],
    'max-params': [ 'warn', { max: 7, },],
    'max-statements': [
        'warn',
        72,
        { ignoreTopLevelFunctions: true, },
    ],
    'max-statements-per-line': 'warn',
    'new-cap': [ 'warn', { newIsCap: true, },],
    'new-parens': 'warn',
    'no-alert': 'warn',
    'no-array-constructor': 'warn',
    'no-async-promise-executor': 'warn',
    'no-await-in-loop': 'warn',
    'no-buffer-constructor': 'warn',
    'no-caller': 'warn',
    'no-case-declarations': 'warn',
    'no-class-assign': 'warn',
    'no-compare-neg-zero': 'warn',
    'no-cond-assign': 'warn',
    'no-confusing-arrow': 'warn',
    'no-console': [
        'warn',
        {
            allow: [
                'info',
                'error',
                'warn',
            ],
        },
    ],
    'no-const-assign': 'warn',
    'no-constant-condition': 'warn',
    'no-constructor-return': 'warn',
    'no-control-regex': 'warn',
    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'warn',
    'no-delete-var': 'warn',
    'no-dupe-args': 'warn',
    'no-dupe-class-members': 'warn',
    'no-dupe-else-if': 'warn',
    'no-dupe-keys': 'warn',
    'no-duplicate-case': 'warn',
    'no-duplicate-imports': [ 'warn', { includeExports: true, },],
    'no-else-return': [ 'warn', { allowElseIf: false, },],
    'no-empty': 'warn',
    'no-empty-character-class': 'warn',
    'no-empty-pattern': 'warn',
    'no-eq-null': 'warn',
    'no-eval': 'warn',
    'no-ex-assign': 'warn',
    'no-extend-native': 'warn',
    'no-extra-bind': 'warn',
    'no-extra-boolean-cast': 'warn',
    'no-extra-label': 'warn',
    'no-extra-parens': [ 'warn', 'functions' ],
    'no-extra-semi': 'warn',
    'no-fallthrough': 'warn',
    'no-floating-decimal': 'warn',
    'no-func-assign': 'warn',
    'no-global-assign': 'warn',
    'no-implicit-coercion': [ 'warn', { allow: [ '!!', '~' ], },],
    'no-implicit-globals': 'warn',
    'no-implied-eval': 'warn',
    'no-import-assign': 'warn',
    'no-inner-declarations': [ 'warn', 'functions' ],
    'no-invalid-regexp': 'warn',
    'no-irregular-whitespace': 'warn',
    'no-iterator': 'warn',
    'no-label-var': 'warn',
    'no-labels': 'warn',
    'no-lone-blocks': 'warn',
    'no-lonely-if': 'warn',
    'no-loss-of-precision': 'warn',
    'no-misleading-character-class': 'warn',
    'no-mixed-operators': 'warn',
    'no-mixed-spaces-and-tabs': 'warn',
    'no-multi-assign': 'warn',
    'no-multi-spaces': 'warn',
    'no-multi-str': 'warn',
    'no-multiple-empty-lines': [
        'warn',
        {
            max: 1,
            maxBOF: 1,
            maxEOF: 1,
        },
    ],
    'no-negated-condition': 'warn',
    'no-new': 'warn',
    'no-new-func': 'warn',
    'no-new-object': 'warn',
    'no-new-symbol': 'warn',
    'no-new-wrappers': 'warn',
    'no-obj-calls': 'warn',
    'no-octal': 'warn',
    'no-octal-escape': 'warn',
    'no-promise-executor-return': 'warn',
    'no-proto': 'warn',
    'no-prototype-builtins': 'warn',
    'no-redeclare': 'warn',
    'no-regex-spaces': 'warn',
    'no-restricted-globals': [ 'warn', 'event' ],
    'no-restricted-imports': [
        'warn',
        'domain',
        'freelist',
        'smalloc',
        'sys',
        'colors',
    ],
    'no-restricted-syntax': [ 'warn', 'WithStatement' ],
    'no-return-assign': [ 'warn', 'except-parens' ],
    'no-return-await': 'warn',
    'no-script-url': 'warn',
    'no-self-assign': [ 'warn', { props: true, },],
    'no-self-compare': 'warn',
    'no-sequences': 'warn',
    'no-setter-return': 'warn',
    'no-shadow-restricted-names': 'warn',
    'no-sparse-arrays': 'warn',
    'no-tabs': 'warn',
    'no-template-curly-in-string': 'warn',
    'no-this-before-super': 'warn',
    'no-throw-literal': 'warn',
    'no-trailing-spaces': 'warn',
    'no-undef': 'warn',
    'no-undef-init': 'warn',
    'no-unexpected-multiline': 'warn',
    'no-unmodified-loop-condition': 'warn',
    'no-unneeded-ternary': 'warn',
    'no-unreachable': 'warn',
    'no-unreachable-loop': 'warn',
    'no-unsafe-finally': 'warn',
    'no-unsafe-negation': 'warn',
    'no-unused-expressions': [
        'warn',
        {
            allowShortCircuit: true,
            allowTernary: true,
            enforceForJSX: true,
        },
    ],
    'no-unused-labels': 'warn',
    'no-unused-vars': [
        'warn',
        {
            args: 'after-used',
            argsIgnorePattern: '^_',
            caughtErrors: 'all',
            caughtErrorsIgnorePattern: '^_',
            ignoreRestSiblings: true,
            vars: 'all',
        },
    ],
    'no-useless-call': 'warn',
    'no-useless-computed-key': [ 'warn', { enforceForClassMembers: true, },],
    'no-useless-concat': 'warn',
    'no-useless-constructor': 'warn',
    'no-useless-escape': 'warn',
    'no-useless-rename': [ 'warn', { ignoreExport: true, },],
    'no-useless-return': 'warn',
    'no-void': 'warn',
    'no-whitespace-before-property': 'warn',
    'no-with': 'warn',
    'object-curly-newline': [
        'warn',
        {
            ExportDeclaration: {
                consistent: true,
                minProperties: 2,
                multiline: true,
            },
            ImportDeclaration: {
                consistent: true,
                minProperties: 4,
                multiline: true,
            },
            ObjectExpression: {
                minProperties: 2,
                multiline: true,
            },
            ObjectPattern: {
                minProperties: 4,
                multiline: true,
            },
        },
    ],
    'object-curly-spacing': [ 'warn', 'always' ],
    'object-property-newline': [ 'warn', { allowAllPropertiesOnSameLine: false, },],
    'object-shorthand': [ 'warn', 'always' ],
    'one-var': [
        'warn',
        {
            const: 'consecutive',
            let: 'consecutive',
            separateRequires: true,
            var: 'consecutive',
        },
    ],
    'one-var-declaration-per-line': [ 'warn', 'always' ],
    'operator-assignment': [ 'warn', 'always' ],
    'operator-linebreak': [ 'warn', 'before' ],
    'padded-blocks': [
        'warn',
        {
            blocks: 'always',
            switches: 'never',
        },
    ],
    'padding-line-between-statements': [
        'warn',
        {
            blankLine: 'always',
            next: '*',
            prev: [
                'const',
                'let',
                'var',
            ],
        },
        {
            blankLine: 'any',
            next: [
                'const',
                'let',
                'var',
            ],
            prev: [
                'const',
                'let',
                'var',
            ],
        },
    ],
    'prefer-const': 'warn',
    'prefer-exponentiation-operator': 'warn',
    'prefer-promise-reject-errors': [ 'warn', { allowEmptyReject: true, },],
    'prefer-regex-literals': 'warn',
    // 'prettier/prettier': 'off',
    'promise/no-new-statics': 'warn',
    'promise/no-return-in-finally': 'warn',
    'promise/no-return-wrap': [ 'warn', { allowReject: true, },],
    'promise/param-names': 'warn',
    'promise/prefer-await-to-then': 'warn',
    'promise/valid-params': 'warn',
    'quote-props': [ 'warn', 'as-needed' ],
    quotes: [
        'warn',
        'single',
        {
            allowTemplateLiterals: true,
            avoidEscape: true,
        },
    ],
    radix: 'warn',
    'require-atomic-updates': 'warn',
    'require-await': 'warn',
    'require-yield': 'warn',
    'rest-spread-spacing': [ 'warn', 'always' ],
    semi: [ 'warn', 'always' ],
    'semi-spacing': [
        'warn',
        {
            after: true,
            before: false,
        },
    ],
    'sort-imports': [ 'warn', { ignoreDeclarationSort: true, }], // ?: Disabilitata perché in conflitto con Perfectioninst
    'sort-keys': 'warn', // ?: Disabilitata perché in conflitto con Perfectioninst
    'sort-keys-fix/sort-keys-fix': [
        'warn',
        'asc',
        { natural: true, }
    ], // ?: Disabilitata perché in conflitto con Perfectioninst
    'space-before-blocks': [ 'warn', 'always' ],
    'space-before-function-paren': [
        'warn',
        {
            anonymous: 'never',
            asyncArrow: 'never',
            named: 'never',
        },
    ],
    'space-in-parens': [ 1, 'always' ],
    'space-infix-ops': 'warn',
    'space-unary-ops': [
        'warn',
        {
            nonwords: true,
            words: true
        },
    ],
    'spaced-comment': [
        'warn',
        'always',
        {
            block: {
                balanced: true,
                exceptions: [
                    '-',
                    '+',
                    '*',
                ],
                markers: [
                    '!',
                    '*',
                    '?'
                ],
            },
            line: {
                exceptions: [
                    '-',
                    '+',
                    '*',
                ],
                markers: [
                    '!',
                    '?',
                    '/',
                    '=>',
                ],
            },
        },
    ],
    // 'standard/computed-property-even-spacing': [ 'warn', 'always' ], // FIXME:
    // 'standard/object-curly-even-spacing': [ 'warn', 'either' ], // FIXME:
    'switch-colon-spacing': [
        'warn',
        {
            after: true,
            before: false,
        },
    ],
    'symbol-description': 'warn',
    'template-curly-spacing': [ 'warn', 'always' ],
    'template-tag-spacing': [ 'warn', 'never' ],
    'unicode-bom': [ 'warn', 'never' ],
    'unicorn/better-regex': [ 'warn', { sortCharacterClasses: false, },],
    'unicorn/catch-error-name': [ 'warn', { name: 'exception', },],
    'unicorn/consistent-destructuring': 'warn',
    'unicorn/consistent-function-scoping': 'off',
    'unicorn/error-message': 'off',
    'unicorn/explicit-length-check': 'off',
    'unicorn/filename-case': [
        'warn',
        {
            cases: {
                camelCase: true,
                kebabCase: true,
                pascalCase: true,
            },
        },
    ],
    'unicorn/import-style': 'off',
    'unicorn/no-abusive-eslint-disable': 'warn',
    'unicorn/no-array-callback-reference': 'off',
    'unicorn/no-array-for-each': 'warn',
    'unicorn/no-array-instanceof': 'off',
    'unicorn/no-array-push-push': 'warn',
    'unicorn/no-array-reduce': 'off',
    'unicorn/no-await-expression-member': 'warn',
    'unicorn/no-empty-file': 'warn',
    'unicorn/no-for-loop': 'warn',
    'unicorn/no-hex-escape': 'off',
    'unicorn/no-lonely-if': 'warn',
    'unicorn/no-nested-ternary': 'warn',
    'unicorn/no-new-array': 'off',
    'unicorn/no-null': 'off',
    'unicorn/no-object-as-default-parameter': 'off',
    'unicorn/no-thenable': 'off',
    'unicorn/no-useless-fallback-in-spread': 'warn',
    'unicorn/no-useless-undefined': 'warn', // FIXME: Disabilitata perché rallenta EsLint
    'unicorn/no-zero-fractions': 'warn',
    'unicorn/numeric-separators-style': 'warn',
    'unicorn/prefer-add-event-listener': 'warn',
    'unicorn/prefer-array-find': 'warn',
    'unicorn/prefer-array-flat-map': 'warn',
    'unicorn/prefer-array-index-of': 'warn',
    'unicorn/prefer-date-now': 'warn',
    'unicorn/prefer-dom-node-append': 'warn',
    'unicorn/prefer-dom-node-remove': 'warn',
    'unicorn/prefer-exponentiation-operator': 'off',
    'unicorn/prefer-export-from': 'warn',
    'unicorn/prefer-includes': 'warn',
    'unicorn/prefer-logical-operator-over-ternary': 'warn',
    'unicorn/prefer-module': 'off',
    'unicorn/prefer-node-protocol': 'off',
    'unicorn/prefer-number-properties': 'warn',
    'unicorn/prefer-object-from-entries': 'warn',
    'unicorn/prefer-query-selector': 'warn',
    'unicorn/prefer-set-has': 'warn',
    'unicorn/prefer-spread': 'warn',
    'unicorn/prefer-starts-ends-with': 'off',
    'unicorn/prefer-string-replace-all': 'warn',
    'unicorn/prefer-string-slice': 'warn',
    'unicorn/prefer-ternary': 'warn',
    'unicorn/prefer-text-content': 'off',
    'unicorn/prevent-abbreviations': [
        'warn',
        {
            allowList: {
                assetsDir: true,
                e2e: true,
                obj: true,
                props: true,
            },
            ignore: [ String.raw`\.e2e`, /^ignore/i ]
        },
    ],
    'unicorn/text-encoding-identifier-case': 'off',
    'use-isnan': 'warn',
    'valid-typeof': [ 'warn', { requireStringLiterals: false, },],
    'wrap-iife': [
        'warn',
        'inside',
        { functionPrototypeMethods: true, },
    ],
    'yield-star-spacing': [ 'warn', 'both' ],
    yoda: 'warn',
};
// Typescript
export const typescriptRules = {
    // Stylistic
    '@stylistic/ts/comma-dangle': [
        'warn',
        {
            arrays: 'always-multiline',
            enums: 'only-multiline',
            exports: 'always-multiline',
            functions: 'only-multiline',
            generics: 'only-multiline',
            imports: 'always-multiline',
            objects: 'always-multiline',
            tuples: 'only-multiline',
        },
    ],
    '@stylistic/ts/no-extra-semi': 'warn',
    '@stylistic/ts/semi': [ 'warn', 'always' ],
    // TypeScript
    '@typescript-eslint/adjacent-overload-signatures': 'warn',
    '@typescript-eslint/ban-ts-comment': [
        'warn',
        {
            minimumDescriptionLength: 18,
            'ts-check': 'allow-with-description',
            'ts-expect-error': 'allow-with-description',
            'ts-ignore': 'allow-with-description',
            'ts-nocheck': 'allow-with-description',
        },
    ],
    // ?: Disabilitata perché in conflitto con Perfectioninst
    // ?: https://typescript-eslint.io/blog/announcing-typescript-eslint-v8-beta#replacement-of-ban-types
    // '@typescript-eslint/ban-types': 'warn',
    '@typescript-eslint/no-empty-function': 'warn',
    '@typescript-eslint/no-empty-object-type': 'warn',
    '@typescript-eslint/no-explicit-any': [
        'warn',
        {
            fixToUnknown: true,
            ignoreRestArgs: true,
        },
    ],
    '@typescript-eslint/no-restricted-types': 'warn',
    '@typescript-eslint/no-unsafe-function-type': 'warn',
    '@typescript-eslint/no-unused-vars': [
        'warn',
        {
            args: 'after-used',
            argsIgnorePattern: '^_',
            caughtErrors: 'all',
            caughtErrorsIgnorePattern: '^_',
            ignoreRestSiblings: true,
            vars: 'all',
        },
    ],
    '@typescript-eslint/no-wrapper-object-types': 'warn',
    // '@typescript-eslint/no-floating-promises': 'warn', // ?: Questa può essere abilitata solo con il Typecheck
    '@typescript-eslint/sort-type-constituents': 'warn', // ?: Disabilitata perché in conflitto con Perfectioninst
    'import-x/named': 'warn', // FIXME: Disabilitata perché rallenta EsLint
    'import-x/order': [
        'warn',
        {
            alphabetize: { order: 'asc', },
            groups: [
                'builtin', // Built-in types are first
                'external',
                'type',
                'internal',
                [ 'sibling', 'parent' ], // Then sibling and parent types. They can be mingled together
                'index', // Then the index file
                'object',
            ],
            'newlines-between': 'always-and-inside-groups',
            pathGroups: [
                {
                    group: 'external',
                    pattern: 'ant-design-vue',
                },
                {
                    group: 'external',
                    pattern: 'ant-design-vue/**',
                },
                {
                    group: 'external',
                    pattern: '@ant-design',
                },
                {
                    group: 'external',
                    pattern: '@ant-design/**',
                },
                {
                    group: 'type',
                    pattern: '~/types**',
                    position: 'before',
                },
                {
                    group: 'internal',
                    pattern: '@vueuse',
                },
                {
                    group: 'internal',
                    pattern: '@vueuse/*',
                },
                {
                    group: 'internal',
                    pattern: '#**',
                    position: 'before'
                },
                {
                    group: 'internal',
                    pattern: 'pinia',
                    position: 'before'
                },
                {
                    group: 'internal',
                    pattern: '~~/**',
                },
                {
                    group: 'internal',
                    pattern: '~/**',
                    position: 'after'
                },
                {
                    group: 'object',
                    pattern: '~/costants**',
                    position: 'after'
                },
            ],
            pathGroupsExcludedImportTypes: [
                'ant-design-vue',
                '@ant-design',
                'pinia'
            ],
            warnOnUnassignedImports: true,
        },
    ], // FIXME: Disabilitata perché rallenta EsLint // ?: Disabilitata perché in conflitto con Perfectioninst
    'no-duplicate-imports': 'off',
    'no-extra-semi': 'off',
    'no-unused-vars': 'off',
    semi: 'off',
};
// Vue && Nuxt
export const vueAndNuxtGlobals = {
    $fetch: 'readonly',
    Component: 'readonly',
    Ref: 'readonly',
    abortNavigation: 'readonly',
    addRouteMiddleware: 'readonly',
    clearError: 'readonly',
    clearNuxtData: 'readonly',
    computed: 'readonly',
    createError: 'readonly',
    customRef: 'readonly',
    defineAppConfig: 'readonly',
    defineAsyncComponent: 'readonly',
    defineComponent: 'readonly',
    defineEventHandler: 'readonly',
    defineModel: 'readonly',
    defineNuxtComponent: 'readonly',
    defineNuxtLink: 'readonly',
    defineNuxtPlugin: 'readonly',
    defineNuxtRouteMiddleware: 'readonly',
    definePageMeta: 'readonly',
    effect: 'readonly',
    effectScope: 'readonly',
    getCurrentInstance: 'readonly',
    getCurrentScope: 'readonly',
    h: 'readonly',
    inject: 'readonly',
    injectHead: 'readonly',
    isNuxtError: 'readonly',
    isPrerendered: 'readonly',
    isProxy: 'readonly',
    isReactive: 'readonly',
    isReadonly: 'readonly',
    isRef: 'readonly',
    isShallow: 'readonly',
    isVue2: 'readonly',
    isVue3: 'readonly',
    loadPayload: 'readonly',
    markRaw: 'readonly',
    navigateTo: 'readonly',
    nextTick: 'readonly',
    onActivated: 'readonly',
    onBeforeMount: 'readonly',
    onBeforeRouteLeave: 'readonly',
    onBeforeRouteUpdate: 'readonly',
    onBeforeUnmount: 'readonly',
    onBeforeUpdate: 'readonly',
    onDeactivated: 'readonly',
    onErrorCaptured: 'readonly',
    onMounted: 'readonly',
    onNuxtReady: 'readonly',
    onRenderTracked: 'readonly',
    onRenderTriggered: 'readonly',
    onScopeDispose: 'readonly',
    onServerPrefetch: 'readonly',
    onUnmounted: 'readonly',
    onUpdated: 'readonly',
    prefetchComponents: 'readonly',
    preloadComponents: 'readonly',
    preloadPayload: 'readonly',
    preloadRouteComponents: 'readonly',
    provide: 'readonly',
    proxyRefs: 'readonly',
    proxyRequest: 'readonly',
    reactive: 'readonly',
    readBody: 'readonly',
    readonly: 'readonly',
    ref: 'readonly',
    refreshNuxtData: 'readonly',
    reloadNuxtApp: 'readonly',
    resolveComponent: 'readonly',
    setPageLayout: 'readonly',
    setResponseHeaders: 'readonly',
    setResponseStatus: 'readonly',
    shallowReactive: 'readonly',
    shallowReadonly: 'readonly',
    shallowRef: 'readonly',
    showError: 'readonly',
    toRaw: 'readonly',
    toRef: 'readonly',
    toRefs: 'readonly',
    toValue: 'readonly',
    triggerRef: 'readonly',
    unref: 'readonly',
    updateAppConfig: 'readonly',
    useAppConfig: 'readonly',
    useAsyncData: 'readonly',
    useAttrs: 'readonly',
    useCookie: 'readonly',
    useCssModule: 'readonly',
    useCssVars: 'readonly',
    useError: 'readonly',
    useFetch: 'readonly',
    useHead: 'readonly',
    useHeadSafe: 'readonly',
    useLazyAsyncData: 'readonly',
    useLazyFetch: 'readonly',
    useLink: 'readonly',
    useNuxtApp: 'readonly',
    useNuxtData: 'readonly',
    useRequestEvent: 'readonly',
    useRequestFetch: 'readonly',
    useRequestHeaders: 'readonly',
    useRoute: 'readonly',
    useRouter: 'readonly',
    useRuntimeConfig: 'readonly',
    useSeoMeta: 'readonly',
    useServerHead: 'readonly',
    useServerHeadSafe: 'readonly',
    useServerSeoMeta: 'readonly',
    useSlots: 'readonly',
    useState: 'readonly',
    useTransitionState: 'readonly',
    watch: 'readonly',
    watchEffect: 'readonly',
    withCtx: 'readonly',
    withDirectives: 'readonly',
    withKeys: 'readonly',
    withMemo: 'readonly',
    withModifiers: 'readonly',
    withScopeId: 'readonly'
};
